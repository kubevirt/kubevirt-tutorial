#!/bin/bash
#
# This file is part of the KubeVirt project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright 2019 Red Hat, Inc.
#

set +e

function install_ansible() {
    # Requirements for Ansible playbooks
    pip install --user kubernetes PyYAML openshift

    # Install ansible
    pip install --user ansible

    # Test ansible installation
    export PATH=${PATH}:${HOME}/.local/bin
    command ansible --version
    retVal=$?
    if [[ $retVal -ne 0 ]]; then
        echo "I cannot install Ansible ://"
        exit -1
    fi
}

function validations() {
	# Common duties to perform before the script execution
	KUTU_PATH="$(pwd)"
	KUCI_PATH="${KUTU_PATH}/../kubevirtci"
    KUCI_REPO="https://github.com/kubevirt/kubevirtci.git"
    K8S_VERS="${1}"

    # Check ansible
	type ansible || install_ansible

    # Set K8s version to spin up, if empty
    if [[ -z ${K8S_VERS} ]]; then
        K8S_VERS="k8s-1.13.3"
    fi

    # Download KubevirtCI repo
    if [[ ! -d ${KUCI_PATH} ]]; then
	    mkdir -p "${KUCI_PATH}"
        git clone ${KUCI_REPO} ${KUCI_PATH}
    fi
}

function k8s_cluster() {
    # Go to KubevirtCI path 
    cd ${KUCI_PATH}

    # Once on KubevirtCI repo, spin up a K8s cluster
    export TARGET=${K8S_VERS}
    make cluster-up

    # Get into the cluster context
    export KUBECONFIG=$(cluster-up/kubeconfig.sh)
}

function lab_provision() {
    # Provision laboratory into K8s
    cd ${KUTU_PATH}/administrator/ansible
    ANSIBLE_ROLES_PATH=roles ansible-playbook -i "localhost," --connection=local playbooks/kubernetes.yml -e "TESTING=true" -e "TARGET=${TARGET}"
}

validations "$1"
k8s_cluster
lab_provision
